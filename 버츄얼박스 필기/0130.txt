<Node.js란?>
	자바스크립트는 원래 인터넷 브라우저에서 사용하기 위해서 만들어짐
	브라우저는 점유율 탈취를 위해 끝없이 발전해 왔음
		=>브라우저 전쟁(Browser Wars)

	1차 브라우저 전쟁은 인터넷 익스플로러가 승리
	2009년쯤 구글-크롬이 등장
		=>2차 브라우저 전쟁

	사파리, 파이어폭스, ..등 다양한 브라우저들이 등장
	구글은 이 전쟁에서 승리하기 위해서 더 빠른 속도거 필요하다고 판단
	기존의 느렸던 자바스크립트의 성능을 끌어올리기 위해서
		=>새로운 자바스크립트 엔진 V8이 탑재 => 성능 좋아짐

	자바스크립트, 특히 V8엔진(웹 브라우저를 만드는데 기반을 제공하는
				오픈소스 자바스크립트 엔진)을 발전시킴

	보안, 성능,.. 많은 부분에서 완성도가 높아짐
	근데 개발자들은 아쉬움이 많이 남았는데..
		=>좋아진 자바스크립트를 브라우저 밖에서도 사용하면 어떨까?

	그래서 등장한것이 Node.js
		자바스크립트 런타임 프로그램

==========================================================

<그래서 Node.js를 왜 배워야 할까?>
	HTML, CSS, JavaScript를 사용하면 되니까..
	현재는 위의 3개만으로는 부족함
	웹이 예전과는 비교할 수도 없을만큼 많이 복잡해졌기 때문
	개발 속도뿐 아니라, 만든 이후에 유지보수를 하는 일 역시 중요하기 때문에
	차근차근 진행하기 위해서는 복잡한 절차가 필요해졌고,
	이를 위해 Node.js를 사용하게 되었음

	디스코드, 트위치, 스팀클라이언트, 넷플릭스가 Node.js기반으로 만들어짐
	여기에 추가로 React 나 Next.js를 더 공부해보는걸 추천

===========================================================

<SSR vs CSR>
	Rendering : 서버로부터 HTML파일을 받아 브라우저에 뿌려주는 과정
	
	브라우저에서 실제로 우리가 보는 화면을 최종적으로 어디서 만들어서 보여주느냐, 어떻게 개발하느냐
		에 따라서 CSR / SSR 로 나누어짐

CSR(Client Side Rendering)
	처음에 브라우저가 서버로부터 HTML을 받아오고 나면,
	사용자(Client)의 요청에 따라서 js를 통해 view를 동적으로 rendering하는 방식
	화면에 보여줄 내용을 클라이언트에서 생성하기 때문에

	1. 처음에 모든 JS파일을 받아오기때문에 첫 로딩 속도가 오래걸림
	2. 데이터 요청이 있을 때만 서버에 요청을 하므로, 
		페이저 전환은 빠르고 서버에 부담이 적음
		대표적으로 자바스크립트(JavaScript)

SSR(Server Sider Rendering)
	서버에 새로운 페이지에 대한 요청을 할때마다
	서버로부터 HTML과 data가 덧붙여진 템플릿을 받아온다
	요청을 할 때마다 브라우저의 새로고침이 일어나는 것
	서버에서 view가 어떻게 보여질지 해석하여 보내주기 때문에

	1. 요청하는 화면의 내용을 그때그때 다운받기 때문에 첫 로딩속도는 빠름
	2. 사용자 상호작용에 따라 view가 변경될때마다 서버와 응답을 하기 때문에
		비교적 서버에 부담이 가는 편

		Node.js SSR기반
		-Java, Python등 ..

Node.js는 JavaScript를 이용하여 개발
JS로 Front-end와 Back-end 양 측에서 모두 사용이 가능하다는
	동형성(ismorphic)이 있어 별도의 언어학습을 단축해주는 장점이 있음

	*Front-end : React, vue, Angular, Svelte, Solid, ...

===========================================

설치완료후
	cmd -> node -v





